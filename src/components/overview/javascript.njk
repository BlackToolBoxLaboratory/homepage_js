<script type="text/javascript" src="../libs/apexcharts/apexcharts.min.js"></script>
<script type="text/javascript" src="../libs/axios/axios.min.js"></script>
<script type="text/javascript" src="../utils/reviseISOString.js"></script>
<script type="text/javascript" src="../utils/createDownloadChartOptions.js"></script>

  <script>
  var WEEK = 7;

  function _extractToWeekly(data) {
    data.reverse();
    let weekData = Array(Math.ceil(data.length / WEEK))
      .fill(0)
      .map((entry, index) => {
        let count = 0;
        for (let i = index * WEEK; i < Math.min((index + 1) * WEEK, data.length); i++) {
          count += data[i].downloads;
        }
        return count;
      });
    return weekData.reverse();
  }

  function getPackages(type) {
    let paramText = '@blacktoolbox';
    switch (type) {
      case 'js':
        paramText += '/prototype-';
        break;
      case 'react':
        paramText += '/react-';
        break;
      case 'vue':
        paramText += '/vue-';
        break;
    }
    const instance = axios.create({
      baseURL: 'https://registry.npmjs.org/',
      timeout: 1000,
    });
    instance.get('-/v1/search', {
      params: {
        text: paramText,
      },
    }).then(function (response) {
      renderPackages(type, response.data.objects);
    })
  }
  function getDownload(type, packageName) {
    const instance = axios.create({
      baseURL: 'https://api.npmjs.org/',
      timeout: 1000,
    });
    instance.get('/downloads/range/last-year/' + packageName).then(function (response) {
      if (response.data.downloads.length) {
        renderDownload(type, packageName, _extractToWeekly(response.data.downloads));
      }
    })
  }
  function renderPackages(type, data) {
    var render = '';
    data.forEach(function (item) {
      var package = item.package;
      render += ('<div class="grid-col col-lg-6">');
      render += ('<div class="overview-package-widget">');

      render += ('<p class="widget_title">');
      render += (package.name + '<a class="inline-link" href="https://www.npmjs.com/package/' + package.name + '" target="_blank" rel="noreferrer" >');
      render += ('<i class="fas fa-external-link-alt fa-fw fa-xs"></i>');
      render += ('</a>')

      render += ('<p class="widget_description">' + package.description + '</p>');

      render += ('<p>');
      render += ('<span class="widget_entry">{{lang.overview.version_colon}}</span>');
      render += ('<span class="widget_value">' + package.version + '</span>');
      render += ('</p>');

      render += ('<p>');
      render += ('<span class="widget_entry">{{lang.overview.release_colon}}</span>');
      render += ('<span class="widget_value">' + reviseISOString(package.date).date + '</span>');
      render += ('</p>');

      render += ('<div id="downloads_' + package.name.replace('@blacktoolbox/', '') + '"></div>');

      render += ('</p>');
      render += ('</div>');
      render += ('</div>');
    });

    $('#' + type + 'List').html(render);

    data.forEach(function (item) {
      getDownload(type, item.package.name);
    })
  }

  function renderDownload(type, packageName, data) {
    var render = '';
    render += ('<p>');
    render += ('<span class="widget_entry">{{lang.overview.download_colon}}</span>');
    render += ('<span class="widget_value">' + data[data.length - 1] + '</span>');
    render += ('</p>');

    render += ('<div class="widget_chart">');
    render += ('<p class="widget_row">');
    render += ('<span class="widget_entry">{{lang.overview.downloads_colon}}</span>');
    render += ('</p>');
    render += ('<div id="chart_' + packageName.replace('@blacktoolbox/', '') + '"></div>');
    render += ('</div>');

    $('#downloads_' + packageName.replace('@blacktoolbox/', '')).html(render);

    renderChart(type, packageName, data);
  }

  function renderChart(type, packageName, data) {
    var options = createDownloadChartOptions(type);
    options.series = [{
      name: top.envLang.translate('chart.times'),
      data
    }];
    options.chart.type = "area";
    options.chart.height = "100%";

    var chart = new ApexCharts(document.querySelector('#chart_' + packageName.replace('@blacktoolbox/', '')), options);
    chart.render();
  }

  function redirectHash(path) {
    top.location.hash = "#/" + path;
  }

  $(document).ready(function () {
    getPackages('js');
    getPackages('react');
    getPackages('vue');
  });
</script>